{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Completionist","list","name","matchesWon","rank","objectID","matches","match","startDate","moment","Date","now","diff","UTC","diffDuration","duration","console","log","asMilliseconds","days","hours","minutes","seconds","ReactDOM","render","date","renderer","completed","className","document","getElementById","largeColumn","width","midColumn","smallColumn","App","props","state","searchTerm","onSearchChange","bind","onDismiss","sort","a","b","event","this","setState","target","value","id","updatedList","filter","item","onChange","pattern","Component","NextMatch","map","Search","children","type","Table","style","toLowerCase","includes","key","href","onClick","Button","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.78956f31.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ReactDOM from \"react-dom\";\nimport Countdown from \"react-countdown\";\nimport moment from \"moment\";\nconst Completionist = () => <span>You are good to go!</span>;\nconst list = [\n  {\n    name: \"Pushpak\",\n    matchesWon: 5,\n    rank: 3,\n    objectID: 0\n  },\n  {\n    name: \"Max\",\n    matchesWon: 0,\n    rank: 2,\n    objectID: 1\n  },\n  {\n    name: \"Deva\",\n    matchesWon: 0,\n    rank: 3,\n    objectID: 2\n  },\n  {\n    name: \"Abhijeet\",\n    matchesWon: 0,\n    rank: 4,\n    objectID: 3\n  },\n  {\n    name: \"Pallishree\",\n    matchesWon: 0,\n    rank: 6,\n    objectID: 4\n  },\n  {\n    name: \"Ron\",\n    matchesWon: 0,\n    rank: 6,\n    objectID: 5\n  },\n  {\n    name: \"Ali\",\n    matchesWon: 0,\n    rank: 1,\n    objectID: 6\n  },\n  {\n    name: \"Brenton\",\n    matchesWon: 0,\n    rank: 3,\n    objectID: 7\n  },\n  {\n    name: \"Vikas\",\n    matchesWon: 0,\n    rank: 5,\n    objectID: 8\n  },\n  {\n    name: \"Abdi\",\n    matchesWon: 0,\n    rank: 4,\n    objectID: 9\n  },\n  {\n    name: \"Morgenne\",\n    matchesWon: 0,\n    rank: 6,\n    objectID: 10\n  },\n  {\n    name: \"Francis\",\n    matchesWon: 0,\n    rank: 2,\n    objectID: 11\n  },\n  {\n    name: \"Yilun Bai\",\n    matchesWon: 0,\n    rank: 4,\n    objectID: 12\n  },\n  {\n    name: \"Jake\",\n    matchesWon: 0,\n    rank: 3,\n    objectID: 13\n  },\n  {\n    name: \"Jeevan\",\n    matchesWon: 0,\n    rank: 2,\n    objectID: 14\n  },\n  {\n    name: \"Andrzej\",\n    matchesWon: 0,\n    rank: 1,\n    objectID: 15\n  },\n  {\n    name: \"Matthew\",\n    matchesWon: 0,\n    rank: 1,\n    objectID: 16\n  },\n  {\n    name: \"Richard\",\n    matchesWon: 0,\n    rank: 2,\n    objectID: 17\n  }\n];\nconst matches = [\n  {\n    match: \"1. Francis vs Morgenne\"\n  },\n  {\n    match: \"2. Yilun Bai vs Abdi\"\n  },\n  {\n    match: \"3. Abhijeet vs Pallishree\"\n  }\n];\n// Renderer callback with condition\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Render a complete state\n    return <Completionist />;\n  } else {\n    // Render a countdown\n    return (\n      <span className=\"banner-header\">\n        The game begins in {days} days {hours} hours {minutes} minutes {seconds}{\" \"}\n        seconds\n      </span>\n    );\n  }\n};\n\nconst startDate = moment(Date.now());\nconst timeEnd = moment(Date.UTC(2020, 3, 13, 16, 30));\nconst diff = timeEnd.diff(startDate);\nconst diffDuration = moment.duration(diff);\n\nconsole.log(\"Total Duration in millis:\", diffDuration.asMilliseconds());\nconsole.log(\"Days:\", diffDuration.days());\nconsole.log(\"Hours:\", diffDuration.hours());\nconsole.log(\"Minutes:\", diffDuration.minutes());\nconsole.log(\"Seconds:\", diffDuration.seconds());\nlet days = diffDuration.days();\nReactDOM.render(\n  <Countdown\n    date={Date.now() + diffDuration}\n    renderer={renderer}\n    days={days}\n  />,\n  document.getElementById(\"counter\")\n);\n\nconst largeColumn = {\n  width: \"40%\"\n};\n\nconst midColumn = {\n  width: \"30%\"\n};\n\nconst smallColumn = {\n  width: \"10%\"\n};\n\nconst isSearched = searchTerm => item =>\n  item.name.toLowerCase().includes(searchTerm.toLowerCase());\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list,\n      searchTerm: \"\"\n    };\n\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.state.list.sort((a, b) => a.rank - b.rank);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onDismiss(id) {\n    const isNotId = item => item.objectID !== id;\n    const updatedList = this.state.list.filter(isNotId);\n    this.setState({ list: updatedList });\n  }\n\n  render() {\n    const { searchTerm, list } = this.state;\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search value={searchTerm} onChange={this.onSearchChange}>\n            Search player name:\n          </Search>\n          <NextMatch></NextMatch>\n        </div>\n        <Table list={list} pattern={searchTerm} onDismiss={this.onDismiss} />\n      </div>\n    );\n  }\n}\n\nconst NextMatch = ({}) => (\n  <div className=\"match-header\">\n    <h1>Coming up matches</h1>\n    {matches.map(item => (\n      <div>\n        <h4> {item.match}</h4>\n      </div>\n    ))}\n  </div>\n);\n\nconst Search = ({ value, onChange, children }) => (\n  <div className=\"App-header\">\n    <h1>KDC Ping pong league </h1>\n    <div id=\"counter\"></div>\n    <form className=\"form-header\">\n      {children} <input type=\"text\" value={value} onChange={onChange} />\n    </form>\n  </div>\n);\n\nconst Table = ({ list, pattern, onDismiss }) => (\n  <div className=\"table\">\n    <div className=\"table-row-header\">\n      <span style={largeColumn}>Name</span>\n      <span style={midColumn}>Matches won</span>\n      <span style={smallColumn}>Rank</span>\n    </div>\n    {list.filter(isSearched(pattern)).map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={largeColumn}>\n          <a href=\"https://google.com\">{item.name}</a>\n        </span>\n        <span style={midColumn}>{item.matchesWon}</span>\n        <span style={smallColumn}>{item.rank}</span>\n        <span style={smallColumn}>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Out of league\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nconst Button = ({ onClick, className = \"\", children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}