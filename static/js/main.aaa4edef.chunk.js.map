{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Completionist","list","name","matchesWon","rank","objectID","matches","match","startDate","moment","Date","now","diff","UTC","diffDuration","duration","console","log","asMilliseconds","days","hours","minutes","seconds","ReactDOM","render","date","renderer","completed","className","document","getElementById","largeColumn","width","midColumn","smallColumn","App","props","state","searchTerm","onSearchChange","bind","onDismiss","sort","a","b","event","this","setState","target","value","id","updatedList","filter","item","onChange","pattern","Component","NextMatch","map","Search","children","type","Table","style","toLowerCase","includes","key","href","onClick","Button","Boolean","window","location","hostname","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aaa4edef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Countdown from \"react-countdown\";\r\nimport moment from \"moment\";\r\nconst Completionist = () => <span>You are good to go!</span>;\r\nconst list = [\r\n  {\r\n    name: \"Pushpak\",\r\n    matchesWon: 5,\r\n    rank: 3,\r\n    objectID: 0\r\n  },\r\n  {\r\n    name: \"Max\",\r\n    matchesWon: 0,\r\n    rank: 2,\r\n    objectID: 1\r\n  },\r\n  {\r\n    name: \"Deva\",\r\n    matchesWon: 0,\r\n    rank: 3,\r\n    objectID: 2\r\n  },\r\n  {\r\n    name: \"Abhijeet\",\r\n    matchesWon: 0,\r\n    rank: 4,\r\n    objectID: 3\r\n  },\r\n  {\r\n    name: \"Pallishree\",\r\n    matchesWon: 0,\r\n    rank: 6,\r\n    objectID: 4\r\n  },\r\n  {\r\n    name: \"Ron\",\r\n    matchesWon: 0,\r\n    rank: 6,\r\n    objectID: 5\r\n  },\r\n  {\r\n    name: \"Ali\",\r\n    matchesWon: 0,\r\n    rank: 1,\r\n    objectID: 6\r\n  },\r\n  {\r\n    name: \"Brenton\",\r\n    matchesWon: 0,\r\n    rank: 3,\r\n    objectID: 7\r\n  },\r\n  {\r\n    name: \"Vikas\",\r\n    matchesWon: 0,\r\n    rank: 5,\r\n    objectID: 8\r\n  },\r\n  {\r\n    name: \"Abdi\",\r\n    matchesWon: 0,\r\n    rank: 4,\r\n    objectID: 9\r\n  },\r\n  {\r\n    name: \"Morgenne\",\r\n    matchesWon: 0,\r\n    rank: 6,\r\n    objectID: 10\r\n  },\r\n  {\r\n    name: \"Francis\",\r\n    matchesWon: 0,\r\n    rank: 2,\r\n    objectID: 11\r\n  },\r\n  {\r\n    name: \"Yilun Bai\",\r\n    matchesWon: 0,\r\n    rank: 4,\r\n    objectID: 12\r\n  },\r\n  {\r\n    name: \"Jake\",\r\n    matchesWon: 0,\r\n    rank: 3,\r\n    objectID: 13\r\n  },\r\n  {\r\n    name: \"Jeevan\",\r\n    matchesWon: 0,\r\n    rank: 2,\r\n    objectID: 14\r\n  },\r\n  {\r\n    name: \"Andrzej\",\r\n    matchesWon: 0,\r\n    rank: 1,\r\n    objectID: 15\r\n  },\r\n  {\r\n    name: \"Matthew\",\r\n    matchesWon: 0,\r\n    rank: 1,\r\n    objectID: 16\r\n  },\r\n  {\r\n    name: \"Richard\",\r\n    matchesWon: 0,\r\n    rank: 2,\r\n    objectID: 17\r\n  }\r\n];\r\nconst matches = [\r\n  {\r\n    match: \"1. Francis vs Morgenne\"\r\n  },\r\n  {\r\n    match: \"2. Yilun Bai vs Abdi\"\r\n  },\r\n  {\r\n    match: \"3. Abhijeet vs Pallishree\"\r\n  }\r\n];\r\n// Renderer callback with condition\r\nconst renderer = ({ hours, minutes, seconds, completed }) => {\r\n  if (completed) {\r\n    // Render a complete state\r\n    return <Completionist />;\r\n  } else {\r\n    // Render a countdown\r\n    return (\r\n      <span className=\"banner-header\">\r\n        The game begins in {days} days {hours} hours {minutes} minutes {seconds}{\" \"}\r\n        seconds\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nconst startDate = moment(Date.now());\r\nconst timeEnd = moment(Date.UTC(2020, 3, 13, 16, 30));\r\nconst diff = timeEnd.diff(startDate);\r\nconst diffDuration = moment.duration(diff);\r\n\r\nconsole.log(\"Total Duration in millis:\", diffDuration.asMilliseconds());\r\nconsole.log(\"Days:\", diffDuration.days());\r\nconsole.log(\"Hours:\", diffDuration.hours());\r\nconsole.log(\"Minutes:\", diffDuration.minutes());\r\nconsole.log(\"Seconds:\", diffDuration.seconds());\r\nlet days = diffDuration.days();\r\nReactDOM.render(\r\n  <Countdown\r\n    date={Date.now() + diffDuration}\r\n    renderer={renderer}\r\n    days={days}\r\n  />,\r\n  document.getElementById(\"counter\")\r\n);\r\n\r\nconst largeColumn = {\r\n  width: \"40%\"\r\n};\r\n\r\nconst midColumn = {\r\n  width: \"30%\"\r\n};\r\n\r\nconst smallColumn = {\r\n  width: \"10%\"\r\n};\r\n\r\nconst isSearched = searchTerm => item =>\r\n  item.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      list,\r\n      searchTerm: \"\"\r\n    };\r\n\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n    this.onDismiss = this.onDismiss.bind(this);\r\n    this.state.list.sort((a, b) => a.rank - b.rank);\r\n  }\r\n\r\n  onSearchChange(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n\r\n  onDismiss(id) {\r\n    const isNotId = item => item.objectID !== id;\r\n    const updatedList = this.state.list.filter(isNotId);\r\n    this.setState({ list: updatedList });\r\n  }\r\n\r\n  render() {\r\n    const { searchTerm, list } = this.state;\r\n    return (\r\n      <div className=\"page\">\r\n        <div className=\"interactions\">\r\n          <Search value={searchTerm} onChange={this.onSearchChange}>\r\n            Search player name:\r\n          </Search>\r\n          <NextMatch></NextMatch>\r\n        </div>\r\n        <Table list={list} pattern={searchTerm} onDismiss={this.onDismiss} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst NextMatch = ({}) => (\r\n  <div className=\"match-header\">\r\n    <h1>Coming up matches</h1>\r\n    {matches.map(item => (\r\n      <div>\r\n        <h4> {item.match}</h4>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst Search = ({ value, onChange, children }) => (\r\n  <div className=\"App-header\">\r\n    <h1>KDC Ping pong league </h1>\r\n    <div id=\"counter\"></div>\r\n    <form className=\"form-header\">\r\n      {children} <input type=\"text\" value={value} onChange={onChange} />\r\n    </form>\r\n  </div>\r\n);\r\n\r\nconst Table = ({ list, pattern, onDismiss }) => (\r\n  <div className=\"table\">\r\n    <div className=\"table-row-header\">\r\n      <span style={largeColumn}>Name</span>\r\n      <span style={midColumn}>Matches won</span>\r\n      <span style={smallColumn}>Rank</span>\r\n    </div>\r\n    {list.filter(isSearched(pattern)).map(item => (\r\n      <div key={item.objectID} className=\"table-row\">\r\n        <span style={largeColumn}>\r\n          <a href=\"https://google.com\">{item.name}</a>\r\n        </span>\r\n        <span style={midColumn}>{item.matchesWon}</span>\r\n        <span style={smallColumn}>{item.rank}</span>\r\n        <span style={smallColumn}>\r\n          <Button\r\n            onClick={() => onDismiss(item.objectID)}\r\n            className=\"button-inline\"\r\n          >\r\n            Out of league\r\n          </Button>\r\n        </span>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst Button = ({ onClick, className = \"\", children }) => (\r\n  <button onClick={onClick} className={className} type=\"button\">\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}